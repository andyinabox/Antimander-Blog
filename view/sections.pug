include mixins

mixin cover()
    .section#cover
        h3 Antimander
        h1 Open source software to generate congressional districts. 
        .button.github-button(onclick='window.open("https://github.com/joel-simon/Antimander", "_blank")', style='--icon-url: url(/icons/arrow-left-up.svg)') Github
        
        p Adjust to see alternatives to Wisconsin's current districts. Read more to learn how this could help fight gerrymandering and why gerrymandering is so complex.
        section.controls
            label.metadata Compact districts
            input.slider(type='range', min='0', max='.99', value='.5', step='any',
                         data-metric='polsby popper' )
            label.metadata Fair ratios of representatives to voters
            input.slider(type='range', min='0', max='.99', value='.5', step='any', 
                         data-metric='efficiency gap' )
            label.metadata Competitive elections
            input.slider(type='range', min='0', max='.99', value='.5', step='any', 
                         data-metric='competitiveness' )
            a.metadata.set_current See the current map
        // img.scroll_down(src='/icons/arrow-down.svg')
        figure.canvas-container
            .inner
                canvas.main_canvas(width=1024, height=1024)
                p.counts.metadata     

        author
            p.metadata By #[a(href='http://www.joelsimon.net') Joel Simon] with contributions from #[a(href='http://joellehman.com/') Joel Lehman]#[br] and design by #[a(href='http://nioono.com/') Nio Ono].
        
mixin overview()
    .section#overview
        h2 Overview
        p Once a decade the United States takes a census of its population and accordingly redraws congressional districts to ensure that each state is fairly divided into equal populations. How the districts are drawn determines the distribution of elected representatives and has significant political impact, motivating political parties to exploit districting to their advantage, known as gerrymandering. Gerrymandering has become a challenge to democracy in large part because because it is challenging to define.
                 p.hover-link(data-hover_name='the_gerrymander') 
        figure.mid
            img(src='imgs/the_gerrymander.png')
            figcaption
                p A cartoon of the #[a(href='https://www.smithsonianmag.com/history/where-did-term-gerrymander-come-180964118', target="_blank") infamous 1812 Massachusetts districting] by its governor Elbridge Gerry that inspired the name 'Gerrymander' due to it resemblance to a mythical salamander.
        p Gerrymandering works by "packing" a small number of districts full of the opposing party’s voters to "waste" many votes, enabling other districts to "crack," i.e. to be won by a small (but comfortable) amount, thereby securing an outsize proportion of a state’s representatives for the gerrymandering party.
        figure.down
            img(src='imgs/pack&crack.svg')
            figcaption
                p An example of packing and cracking from #[a(href='https://www.washingtonpost.com/news/wonk/wp/2015/03/01/this-is-the-best-explanation-of-gerrymandering-you-will-ever-see/') Washington Post].
        p While a districting should intuitively be 'fair' to each party, often multiple other criteria are important, too, such as being 'regularly shaped' and having competitive elections(#[a(href='#metrics') discussed below]. Their relative importance are ultimately subjective. As a result, there is no one 'ideal district' and it is difficult to definitively show that a districting could be more fair. This has led to the Supreme Court ruling that while gerrymandering may be unjust, an impartial means to evaluate it is lacking. - #[a(href='https://en.wikipedia.org/wiki/Vieth_v._Jubelirer') Vieth v. Jubelirer] (2004). In #[a(href='https://www.supremecourt.gov/opinions/18pdf/18-422_9ol1.pdf',target='_blank') Rucho v. Common Cause (2019)] the court returned to gerrymandering, ruling that partisan gerrymandering is not justiciable in federal court and litigation must shift to state courts.
        p  Evaluating a districting by comparing it to a set of reasonable alternatives has recently become a theoretically attractive approach since it demonstrates that superior solutions are possible while taking into account natural biases of geography and voter distribution. However, generating a large set of satisfactory districts is a significant technical challenge because states may be composed of tens of thousands of geographic units and be optimized for many competing objectives.

        figure
            img(src='imgs/nc_evidence.png')
            figcaption
                p Admitted Algorithmic evidence in #[a(href='https://www.nccourts.gov/assets/inline-files/18-CVS-14001_Final-Judgment.pdf?Bwsegeo1VV20zhJsp9hoClvmoRp3A6AR') Common Cause v. Lewis] presented by Dr Chen showing how a proposed plan (red) is less compact than sampled generated plans which helped convince the court that the proposed plan was a biased outlier.
 
        //- p The districting problem is the partitioning of an undirected connected graph into a fixed number of districts. Each node in the graph represents the geographic unit of a state that composes a district, and contains a number of voters registered for each political party.The partitioning of the state has two constraints: the total population of each district must be approximately equal (i.e. it cannot deviate more than specific percentage from the state’s total population divided by the number of districts), and each district must be contiguous.
        
        p Antimander is an open source library that generates diverse and optimized congressional districts with many objectives as well as an interface for making the results accessible to the public. Our goal is to  bring transparency to the tradeoffs as well as be courtroom evidence to prove partisan gerrymandering. This work connects the problem of congressional districting to the fields of #[a(href='https://en.wikipedia.org/wiki/Generative_design', target='_blank') generative design], #[a(href='https://en.wikipedia.org/wiki/Multi-objective_optimization', target='_blank') multi-objective evolutionary algorithms (MOEAs)] and #[a(href='http://eplex.cs.ucf.edu/noveltysearch/userspage/', target='_blank') novelty search].
        p Previous approaches apply Monte Carlo methods [1], single-objective evolutionary algorithms [4], and non-evolutionary two-objective methods [6] to generate districtings.
        // p There remains a need for an open-source library that can optimize such a complex problem with many objectives as well as an interface for making the results accessible to the public. Having this would bring transparency the tradeoffs and how they were made for existing districts as well as be courtroom evidence to prove partisan gerrymandering. This work connects the problem of congressional districting to the fields of generative design, multi-objective evolutionary algorithms (MOEAs) and novelty search.
        //- button View supplementary technical overview.
        //- p Like with generative design tools, the goal is to present an optimal set of options for every trade-off that can be used for comparison.
        //- p Antimander is a generative design tool and research project to both help detect gerrymandering and also bring transparancy to the the complex trade-offs in district design. 
        
        //- generate and browse optimized congressional districtings. While districting commitess using it directly is unikely, it could be used as evidence of gerrymandering and also to help inform to public about the tradeoffs and how these trade-offs were made for their districts.
    
        //- p Antimander proposes connecting algorithmic districting to the research field of multi-objective evolutionary algorithms (MOEAs) and novelty search and presents an open source optimization engine and viewer that does so. It is just a first-step and more work and help is needed.
    
    
        //- p TODO - add more
        //- p Previous approaches apply Monte Carlo methods [1], single-objective evolutionary algorithms [4], and non-evolutionary two-objective methods [6] to generate districtings. Antimander is a open source, multi-objective evolutionary that creates optimzied dsitricts for comparison.
    
        //- h4 The  original "Gerrymander"] in Massachusetts
        //- img(src='img=s/the_gerrymander.jpg', style='width:256px;')
        //- H2 The role of Software
        //- P
        //- p Despite gerrymandering remaining a challenge, there is promise that algorithmic developments may o er relief. Towards that end, we have demonstrated a method and open-source tool that optimizes districts across several objectives using multi-objective evolution. Our study in Wisconsin demonstrates the capacity to produce districts that are more equal, competitive, and compact than the current real-world districts.
    
        //- p However, for tools like this to be successful they must incorporate many further measures, including majority-minority districts, preserving areas of interest, and other metrics that vary in importance by state. We suggest the districting problem as a potential MOEA benchmark for both technical reasons and because of its timely need for the 2021 redistricting.
    
        //- p Here we present an evolutionary multi-objective approach to identify gerrymandering, building on recent approaches that contrast a prospective districting with an ensemble of simulated solutions [7]. The premise is that a fair districting should not be heavily Pareto-dominated by such simulated solutions. However, generating a large set of satisfactory districts is a signi cant technical because states may be composed of tens of thousands of geographic units, with trade-o s between many competing objectives. Previous approaches apply Monte Carlo methods [1], single- objective evolutionary algorithms [4], and non-evolutionary two- objective methods [6] to generate districtings. However, there re- mains a need for an optimization tool that can scale to thousands of geographic units, several constraints, and more than two objectives. This paper connects the problem of congressional districting to the research  eld of multi-objective evolutionary algorithms (MOEAs) and novelty search. We introduce and validate a framework and open source library called Antimander1 for multi-objective optimiization of congressional districts.

mixin viewer()
    .section.viewer.viewer_row#viewer(data-datapath='general_fif_centers', data-stage='5')
        .viewer-track
            .viewer-container
                +district_viewer()
                // img(src="https://media2.giphy.com/media/v0eHX3n28wvoQ/giphy.gif")
                // +district_viewer("Interactive Viewer")
        section.snap
            h2 Viewer
            p An interactive browser of one run of Antimander for Wisconsin. Each districting is 'optimal' for a slightly different weighing of the three objectives.
        section.snap
            p  On the top-left is a #[a.cite(href='https://eagereyes.org/techniques/parallel-coordinates') parallel coordinates plot] which has one line for every generated solution. Each vertical axis is a dimension that was optimized for.
        section.snap
            p You can drag (brush) on an axis to filter values. This makes it easy to explore the tradeoffs. For example, you may see only the top percentage of one objective and also how those solutions rank in other objectives.
            img.inline.narrow(src='imgs/filter.png')
        section.snap
            p You may also click on any district to enlarge it.
        section.snap
            p Wisconsin is divided into eight districts. The color represents what party that district is leaning towards.
            img.inline.wide(src='imgs/figure_legend.png')
        section.snap
            p Exploring the results allows us to build intuition about the tradeoffs.

mixin metrics()
    .section#metrics
        h2 Metrics
        //- h3 What makes a good district?
        p The results above were optimized for "fairness", "compactness" and "competitiveness." But what are those and what do they mean and what makes a 'good' district?
        h3 1. Compactness
        p The original gerrymander was named for its peculiar shape and it is intuitively desirable to expect to live near people within the same district. A lot of attention is therefore paid to the shape of districts, especially since - unlike other metrics - it is easy to evaluate visually. But what does it mean for a shape to be 'compact'? It turns out there are many metrics that can be used. Images below are from #[a(href="https://fisherzachary.github.io/public/r-output.html") this article] which also has additional metrics.
        figure.up
            .image-set
                img(src='imgs/compactness/polsby_popper.png')
                img(src='imgs/compactness/convex_hull.png')
                img(src='imgs/compactness/reock.png')
                img(src='imgs/compactness/center_distance.png')
            figcaption
                ol
                    li #[b Polspy-Popper]: The ratio of the shape's area to its perimeter (used above).
                    li #[b Convex-Hull]: The ratio of smallest convex shape that can fit around a shape to its perimeter.
                    li #[b Bounding-Circle (Reock)]: Ratio of the area to that of the minimum circle that can fit around it. Also knows as "Reock."
                    li #[b Center-Distance]: The average distance to the center of a shape from the points within that shape.

        h3 2. Fairness
        //- h4 Efficiency-Gap:
        p Generally we want the percent of elected representatives to correspond to the percent of voters for that party. The #[i Efficiency-Gap] [5] is a metric that views fairness through the lens of the lost votes of each party. Votes cast for the losing party, or those cast for the winning party beyond the  threshold needed to win are considered lost.
        //- https://www.brennancenter.org/sites/default/files/legal-work/How_the_Efficiency_Gap_Standard_Works.pdf
        p There is another metric called #[i Partisan Symmetry] based on the Seats-Votes curve which plots how number of representatives varies with percent of the vote for each party. #[a(href='https://jeffreyshen19.github.io/Seats-Votes-Curves/', target='_blank') This article] has excellent explanations with interactive charts of pervious years districts.
        figure.up
            img(src='https://docs.google.com/drawings/d/e/2PACX-1vSNgjj2IV_HZ_ntJhRyN8qdH3NF0xQys6uOouyPN4a0H_x-lzAnUIwdLj5FmFUmLyHgFDaTerpvNVys/pub?w=704&h=601')
            figcaption
                p #[b Seats-Votes Curve]. The area between the curves is called the Partisan Symmetry score and measures how similar the curves are for each party.

        h3 3. Competitiveness
        p Close races help prevent incumbents from becoming too entrenched (incumbent gerrymandering). Also, less polarized representatives are beneficial for a healthy democracy. Competitiveness is measured by the largest ratio by which one party wins over another.

        h3 4. Minority Representation
        p While partisan gerrymandering is not illegal, #[a(href='http://www.publicmapping.org/what-is-redistricting/redistricting-criteria-the-voting-rights-act') racial gerrymandering is under the Voting Rights Act]. There should be enough "majority-minority" districts that have minority groups representatives. However, defining racial gerrymandering #[a(href='https://fivethirtyeight.com/features/is-gerrymandering-the-best-way-to-make-sure-black-voters-are-represented/') is also complicated] and North Carolina is one example of where preventing one kind of gerrymandering came directly at the expense of another.

        h3 5. Preserving Communities
        p Another desired redistricting criteria is to not divide "communities". While there are #[a(href='https://www.brennancenter.org/sites/default/files/analysis/6%20Communities%20of%20Interest.pdf') some guidelines] for how to do so it is exceptionally hard to codify explicitly. One #[a(href='https://representable.org/') recent approach] is to use crowd sourcing.

mixin all_compactness_viewer()
    .section.viewer.viewer_row(
        data-datapath='all_compactness',
        data-stage='5'
    )
        .viewer-track
            .viewer-container
                +district_viewer()
                // img(src="https://media2.giphy.com/media/v0eHX3n28wvoQ/giphy.gif")
                // +district_viewer("Multiple compactness")
        section.snap
            h2 Some title here
            p As you can see above, there are many many things we want in districts and and improving one metric may sometimes require harming another.
        section.snap
            p Generative algorithms can also be used here to help explore the space of tradeoffs.
        section.snap
            p On the left are districts optimized for all of the compactness metrics above. In addition, districts were required to be contiguous and have nearly-equal populations.
        section.snap
            p We can see which metrics correlate with each other and which do not, or what it means to be compact in one regard but not the other.
        section.snap
            p The dark reds and blues mean these districts are not competitive, which is not surprising since that was not something optimized for.
        section.snap
            p Metrics like Polsby-Popper that are based on surface area conflict more with metrics (i.e. more lines cross) that are based on general shape (like center dist).
        section.snap
            p Which metrics (or pairs of) best correspond to your idea of 'compactness?'
             
mixin methods()
    .section#methods
        h2 Methods
        p Optimization is is typically a process aimed towards achieving a particular goal; however, many real world problems are complex with multiple competing goals. Some domains handle this by creating a weighted average 'composite' goal. This requires picking a precise and often arbitrary weighting a priori. Consider choosing an airplane flight, usually some balance of speed and affordability is desired but that tradeoff is subjective and it's hard to weight them before seeing the options. Multi-objective optimization is the process of finding the optimal set of solutions.
        figure
            img(src='https://docs.google.com/drawings/d/e/2PACX-1vRj4GulRK3RKGTO3X4cMyKh7bh3M0b9WeOZjhRHOFBDk0XGtK-kQfOGGr9iXaWzAuvsXN614tleJlfn/pub?w=577&h=295')
            figcaption
                p #[b Left]: Minimizing the error rate of a single-objective over time. #[br] #[b Right]: In multi-objective optimization there is a "pareto-front" or n-dimensional surface of solutions where every solution in the front has no other solution that is better in every regard (dominates). These are called  "pareto-optimal."
        h3 Problem Definition
        p The districting problem is the partitioning of an undirected connected graph into a fixed number of districts. Each node in the graph represents the geographic unit of a state that composes a district, and contains a number of voters registered for each political party. The partitioning of the state has two constraints: the total population of each district must be approximately equal and each district must be contiguous.
        //- p Here we optimize districtings for three objectives Polspy-Popper (compactness), Equality-Gap (fairness) and competitiveness. As discussed above, many other measures beyond those exist, and Antimander tool can be used with measures most appropriate for a particular state.
        
        h3 Process
        p The Non-Dominated-Sorting-Genetic-Algorithm (NSGA-II) [cite] is used here, which is an evolutionary multi-objective algorithm (MOEA). To improve upon NSGA-II (which when applied naively failed to generate any feasible solutions), we explore a series of extensions: multi-phase optimization, novelty search (NS), and feasible-infeasible (FIF) search. Crossover is not employed.
        figure
            img(src='imgs/methods/nsgaii.png')
            figcaption
                p Overview of the NSGA-II process.
        
        h3 Representation & Seeding
        p Districts are represented as integer arrays, where each node is assigned to a district. Initial individuals are created by taking random seed nodes and iteratively adding adjacent random unassigned nodes until there are no unassigned nodes left. A hill-climbing repair operator mutates the random districts until they meet the equality threshold constraint.
        
        h3 Mutation Operator
        p The mutation operator simply takes a node bordering another district and swaps the district it belongs to. To make exploring the search space practical, the mutation operator only allows mutations that preserve the contiguity of the district. Calculating graph connectedness after every mutation would be computationally prohibitive and so a local adjacency graph is created for each node for fast checks.
        figure
            img(src='imgs/methods/mutation.svg')
            figcaption
                p Mutation process: A node (orange outline) is random selected to swap districts. The circles are the immediate adjacency graph, a simple DFS is done on nodes in the same district (black-circles). Here we see that removing the orange node would break the district and is therefore prohibited. A full graph traversal is not needed because of assumptions about the structure of districts (such that one district will never fully enclosed another district) that are preserved by the objectives.
    
        h3 Novelty Search
        p Novelty search explicitly promotes diversity, thereby assisting exploration in search [ #[a.cite(href='') cite] ]. Novelty Search requires a behavior characterization that captures important traits in few dimensions. Multiple characterization descriptors were proposed and tested.

         //- Not sure how to explain this clearly.
         //- p One of the challenges was that the method should be invariance to swapping district id's since those are functionally equivalent.
        figure.full-height
            img(src='imgs/novelty_metrics/center_histograms.svg')
            figcaption
                p Method #1: Tile-Histograms. A histogram of the distances between nodes within the same district. Inspired by shape features used to characterize 3D meshes [cite osada2002shape] for object databases in ways invariant to scale and rotation. It was used as a novelty metric for #[a(href='http://www.joelsimon.net/corals.html', target='_blank') Evolving Alien Corals.] #[img(src='imgs/coral.lol.png', style='height:32px;')]
        figure.full-height
            img(src='imgs/novelty_metrics/centers.svg')
            figcaption
                p Method #2: Sorted-Centers. The Simplest method whereby the centroid of each district is sorted by 'x+y' and concatenated.
        figure.full-height
            img(src='imgs/novelty_metrics/mutual_tiles.svg')
            figcaption
                p Method #3: Mutual-Tiles. Pairs of tiles are selected at the start of each run (dashed lines). Then, a binary array is constructed such that Vi is 1 if the ith pair is in the same district and 0 otherwise. The k top principal components of this binary array are the features. It captures the most information at the expense of the most meta-parameters.
    
        h3 Feasible-Infeasible Search               
        p The double constraints of contiguity and equality propose a challenge for the optimization process since the mast majority of the possibilities are inviable. Often, finding a good solution requires exploring some bad ones first. Some genetic algorithms simply throw out invalid solutions while others keep them in the same population but with a penalty to their fitness. A more elegant solution is to keep two populations of solutions, one for feasible individuals (those that satisfy all constraints) and one for infeasible (FIF). The feasible population optimizes for all the objectives while the infeasible one optimizes to satisfy the objectives. Liapis et all (cite Enhancements to Constrained Novelty Search) propose combining novelty search with FIF.
        figure
            img(src='imgs/methods/feas_infeas_drawing.svg')
            figcaption
                p Re-creation of figure 1-C in Liapis et all showing the total solution space with disjoint spaces of feasible solutions. Infeasible solutions (orange) also have a pressure to explore, making them more likely to discover novel solutions.
    
        h3 Multi-Phase
        p Because optimizing a large number of nodes directly is challenging, districts are optimized through a multi-phase evolutionary algorithm, where each successive phase divides districts more granularly (similarly to Swarmy et al. cite{swamymulti}). To create a series of coarsening graphs, the graph is iteratively contracted using star contraction \cite[ch. 13]{ab-algorithms} until the state has reached 500 nodes. An additional bias is added to preserve compact shapes across graph resolutions. 
        figure
            img(src='imgs/methods/contract.png')
            figcaption
                p Multiple graph contractions with compactness bias.
        //- The results of optimizing at a more coarse representation serve as a starting point for optimizing the successive (less-coarse) phase.
        //- The multi-objective evolutionary algorithm NSGA-II \cite{deb2002fast} is used to optimize the populations at each phase. The implementation used of NGSA-II [pymoo] handles constraints by placing infeasible solutions into their own front. A spatially aware mutation operator (described below) is implemented to encourage feasible mutations.
    
        h2 Data
        p Wisconsin is chosen as a test as in [cite{liu2016pear,swamymulti}]. Census and geographic data was downloaded from the Metric Geometry and Gerrymandering Group's mggg-states #[a(href='https://github.com/mggg-states/WI-shapefiles') Github repository]. Voters for each party were the average voters in the 2012 and 2016 presidential election. Wisconsin has eight congressional districts composed from 6634 census wards.

mixin results()
    .section#results
        h2 Results
        p Three novelty methods were compared using NSGA-II as well as with and without feasible-infeasible search (FIF). Novelty was added as an additional objective. Each run had a total population of 700, and consisted of 15000 generations across five phases. Each run was replicated five times.
        figure.full-height
            img(src='imgs/results/optimization_comp.svg')
            figcaption
                p All three novelty metrics outperformed the baseline with 'Centers' metric doing the best. Surprisingly, novelty search without FIF did the worst, and seemed to struggle with the complexity of later phases. This validates that novelty search combined with Feas-Infeas is an effective combination. 
        //- FIF with novelty outperformed vanilla NSGA-2 and FIF without novelty. Somewhat suprisingly, FIF did worse than NSGA if no novelty was employed.
        figure
            img(src='imgs/results/results.png')
            figcaption
                p Comparing actual and optimized Wisconsin districts. Shown optimized solutions are hand-chosen from those that dominate the actual districting (i.e. strictly lower score on all measures) (a) Wisconsin's 2011 districts have scores: fairness=0.788, competitiveness=%53.16, equality=%8.46. (b) An optimized compact district from a FIF-NOV run: fairness=0.647, competitiveness=%17.98, equality=%0.76. The solution is quantitatively and qualitatively more compact than the actual districting. (c) An optimized district with maximum fairness and competitiveness from a FIF-NOV run: fairness=0.762, competitiveness=%13.12, equality=%0.0 Remarkably this districting had exactly 726419 lost votes for each party.        
        p For a final analysis the diversity of generated solutions was evaluated. As discussed previously, a comparison is most meaningful when done against a diverse set of alternatives. The 'Centers' metric is used as the basis of exploring diversity since it created the most optimal solutions. Multiple runs of four different methods were combined and the features of final solutions were projected into 2D with PCA. 
        figure.full-height
            img(src='imgs/results/novelty.png')
            figcaption
                p The clusters of solutions from four methods. The "Baseline" (regular NSGA-II) has four general clusters of solutions, the least of any. Congruent with expectations, the pure novelty search (top-right) has the most diversity. FIF with and without novelty seem to have comparable diversity, although the clusters in plain-FIF overlap highly with the baseline. 

mixin next-steps()
    .section#conclusion
        h2 Conclusion & Next Steps
        p How should compactness be prioritized over competitiveness? Or partisan gerrymandering vs racial gerrymandering?  Algorithms cannot make these tough trade-offs for us. However, they can empower us by bringing transparency to the tradeoffs and providing optimal sets of options. There is also promise that having optimal options will expose gerrymandered districts as statistical outliers.
        p Antimander an open-source high-performance optimization library and interactive browser with the goal of achieving this dream and making districting more transparent and fair. It has presented and validated novel methods to achieve high quality districts; however, to be ultimately successful it needs more work and must incorporate further measures, including majority-minority districts, preserving areas of interest, and other metrics that vary in importance by state. To do this requires growing into a larger open source community that brings together a diverse group of researchers, mathematicians, statisticians, designers and policy experts. If this is something you are interested in being art of or supporting please reach out. 
//        .card
//            +mailchimp()
//        br
//        .card
//            h3 Contact
//            //- p: a(href='mailto:joelsimon6@gmail.com', target="_top") joelsimon6@gmail.com
//            p: a(href='mailto:joel@morphogen.io', target="_top") joel@morphogen.io
//        br
//        .github_row.card
//            h3 Contribute:
//            .github
//                img(src='/imgs/github.png')
//                a(href='https://github.com/joel-simon/Antimander') Github
//            .github
//                img(src='/imgs/Discord-Logo-Color.png')
//                a(href='https://discord.gg/UmgaE74') Discord
//        .padding(style='height:40px;')
                

mixin appendix()
    .section#appendix
        h2 Appendix
        h3 Popular Vote Interstate Compact:
        p TODO: discuss #[a(href='https://en.wikipedia.org/wiki/National_Popular_Vote_Interstate_Compact') Popular Vote Interstate Compact]

mixin vary_tests()
    #varytest.section.viewer.viewer_row(
        data-datapath='vary_test_2k/d7-c2',
        data-viewertype='single',
        data-stage='3',
    )   
        .viewer-track
            .viewer-container
                +district_viewer()
                // img(src="https://media2.giphy.com/media/v0eHX3n28wvoQ/giphy.gif")
        section.snap
            h2 Varying Cities and Districts
            p Another benefit of a generative tool is the ability better understand gerrymandering by seeing what strategies are optimal for different situations.
        
        section.snap
            p In these experiments Antimander optimizes for compactness as well as partisan bias for artificially constructed states varying numbers of districts and cities. The cities are composed of one party and states have equal voters of each party.
        
        section.snap.map_opts
            p Click a map to view
            img(src='imgs/varytest/c1_small.jpg', data-datapath='vary_test_2k/d7-c1', data-stage='3')
            img(src='imgs/varytest/c2_small.jpg', data-datapath='vary_test_2k/d7-c2', data-stage='3')
            img(src='imgs/varytest/c3_small.jpg', data-datapath='vary_test_2k/d7-c3', data-stage='3')
            img(src='imgs/varytest/WI.png', data-datapath='bias', data-stage='5')

        section.snap
            p Some interesting patterns emerge, such as how with you can have compact and republican-biased but not compact and democrat biased for some numbers of cities. This is a direct result of one party being forced into a small geographic area.
            
        section.snap
            p We also see that gerrymandering for democrats involves splitting cities into many districts so that they may be narrowly won.

mixin references()
    .section#references
        h2 References
        h3 Libraries used
        ul
            li: p: a(href='https://pymoo.org/') Pymoo: Multi-objective Optimization.
            li: p: a(href='http://regl.party/') Regl: A functional abstraction for webgl.
            li: p: a(href='https://cython.org/') Cython: Language and static compiler for Python.
            li: p: a(href='https://www.redaction.us/') Redaction: Typeface used.
            
        h3 Papers Cited
        ul
            li: p Metric Geometry and Gerrymandering Group. 2013. Gerrychain. https://github. com/mggg/GerryChain. (2013).
            li: p K. Deb, A. Pratap, S. Agarwal and T. Meyarivan, "A fast and elitist multiobjective genetic algorithm: NSGA-II," in IEEE Transactions on Evolutionary Computation, vol. 6, no. 2, pp. 182-197, April 2002.
            li: p Joel Lehman and Kenneth O Stanley. 2008. Exploiting open-endedness to solve problems through the search for novelty.. In ALIFE. 329–336.
            li: p Antonios Liapis, Georgios N Yannakakis, and Julian Togelius. 2015. Constrained novelty search: A study on game content generation. Evolutionary computation 23, 1 (2015), 101–129.
            li: p Yan Y Liu, Wendy K Tam Cho, and Shaowen Wang. 2016. PEAR: a massively parallel evolutionary computation approach for political redistricting optimization and analysis. Swarm and Evolutionary Computation 30 (2016), 78–92.
            li: p Nicholas O Stephanopoulos and Eric M McGhee. 2015. Partisan gerrymandering and the e ciency gap. U. Chi. L. Rev. 82 (2015), 831.
            li: p Rahul Swamy, Douglas King, and Sheldon Jacobson. [n. d.]. Multi-Objective Optimization for Political Districting: A Scalable Multilevel Approach. ([n. d.]).
            li: p Wendy K Tam Cho and Yan Y Liu. 2016. Toward a talismanic redistricting tool: A computational method for identifying extreme redistricting plans. Election Law Journal 15, 4 (2016), 351–366.
        